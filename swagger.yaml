---
openapi: 3.0.1
info:
  title: SistemaGerencial
  version: '1.0'
paths:
  "/api/Auth/register":
    post:
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RegisterDto"
          text/json:
            schema:
              "$ref": "#/components/schemas/RegisterDto"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/RegisterDto"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/UserModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/UserModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/UserModel"
  "/api/Auth/login":
    post:
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LoginDto"
          text/json:
            schema:
              "$ref": "#/components/schemas/LoginDto"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/LoginDto"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/api/Auth/refreshToken":
    post:
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/api/Transaction":
    get:
      tags:
      - Transaction
      parameters:
      - name: type
        in: header
        schema:
          "$ref": "#/components/schemas/TransactionType"
      - name: since
        in: query
        schema:
          type: string
          format: date-time
      - name: until
        in: query
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TransactionDto"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TransactionDto"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TransactionDto"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2: []
  "/api/Transaction/{id}":
    get:
      tags:
      - Transaction
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2: []
  "/api/Transaction/Add":
    post:
      tags:
      - Transaction
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransactionDto"
          text/json:
            schema:
              "$ref": "#/components/schemas/TransactionDto"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/TransactionDto"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2: []
  "/api/Transaction/AddList":
    post:
      tags:
      - Transaction
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/TransactionDto"
          text/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/TransactionDto"
          application/*+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/TransactionDto"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2: []
  "/api/Transaction/Update":
    put:
      tags:
      - Transaction
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransactionDto"
          text/json:
            schema:
              "$ref": "#/components/schemas/TransactionDto"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/TransactionDto"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2: []
  "/api/Transaction/Delete/{id}":
    delete:
      tags:
      - Transaction
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2: []
  "/api/Transaction/Period":
    get:
      tags:
      - Transaction
      parameters:
      - name: since
        in: query
        schema:
          type: string
          format: date-time
      - name: until
        in: query
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/TransactionDto"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2: []
  "/api/User":
    get:
      tags:
      - User
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserModel"
    post:
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/UserModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UserModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/UserModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/UserModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/UserModel"
  "/api/User/{id}":
    get:
      tags:
      - User
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/UserModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/UserModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/UserModel"
    delete:
      tags:
      - User
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
  "/api/User/Update":
    post:
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/UserModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UserModel"
      responses:
        '200':
          description: Success
components:
  schemas:
    LoginDto:
      type: object
      properties:
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    RegisterDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        confirmPassword:
          type: string
          nullable: true
      additionalProperties: false
    TransactionDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        type:
          "$ref": "#/components/schemas/TransactionType"
        value:
          type: number
          format: double
        dateTime:
          type: string
          format: date-time
        isFixed:
          type: boolean
      additionalProperties: false
    TransactionType:
      enum:
      - 1
      - 2
      type: integer
      format: int32
    UserModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        passwordHash:
          type: string
          format: byte
          nullable: true
        passwordSalt:
          type: string
          format: byte
          nullable: true
        refreshToken:
          type: string
          nullable: true
        created:
          type: string
          format: date-time
        expires:
          type: string
          format: date-time
      additionalProperties: false
  securitySchemes:
    oauth2:
      type: apiKey
      description: Standard Authorization Header using the Bearer scheme ("bearer
        {token}"
      name: Authorization
      in: header
